<div class="flex justify-center items-center min-h-screen">
  <div class="container flex">
    <div class="w-2/5 mr-10">
      <p class="mt-6 mb-4">
        <%= link_to 'javascript:history.back()', class: "text-xl" do%>
          <i class="fa-solid fa-angles-left"></i>戻る
        <%end%>
      </p>

      <h1 class="text-4xl text-center">投稿を編集</h1>
      <%= form_with model: @post, local: true, data:{ turbo: false } do |f| %>
      <%= render "shared/error_messages", object: f.object%>
        <h1 class="text-center text-xl mt-6">おすすメーター</1>
        <div class="mt-6 flex justify-center">
          <div class="rating rating-lg">
            <%= f.radio_button :rating, 1, class: 'mask mask-star-2 bg-usuki ' %>
            <%= f.radio_button :rating, 2, class: 'mask mask-star-2 bg-usuki ml-5' %>
            <%= f.radio_button :rating, 3, class: 'mask mask-star-2 bg-usuki ml-5' %>
            <%= f.radio_button :rating, 4, class: 'mask mask-star-2 bg-usuki ml-5' %>
            <%= f.radio_button :rating, 5, class: 'mask mask-star-2 bg-usuki ml-5' %>
          </div>
        </div>

        <div class="mt-10 flex justify-center">
          <%= f.text_field :title, class:"text-sm bg-gohun border-2 w-4/5 h-10 p-5", placeholder: "ここにおつまみの名称を入れてください"%>
        </div>
        <div class="mt-6">
          <%= f.label :images do %>
            <i class="fa-solid fa-camera bg-namari p-8 text-gohun"></i>
            <%= f.file_field :images, multiple: true, accept: "image/jpeg,image/jpg,image/png" ,class: "hidden" %>
          <%end%>
        </div>
 
        <div class="mt-6 flex justify-center">
          <%= f.text_area :body, class:"text-sm bg-gohun border-2 w-4/5 h-36 p-5", row: "10", placeholder: "おつまみについて入力を行なってください" %>
        </div>

        <%= f.hidden_field :latitude%>
        <%= f.hidden_field :longitude%>

        <%= f.submit "編集する",class:"btn btn-wide bg-gohun hover:bg-usuki text-sumi mt-10 mb-4"%>
      <% end %>
    </div>
    <div class="w-3/5">
      <div id='map'></div>
    </div>
  </div>
</div>

<style>
  #map {
      height: 100vh;
    }
</style>

<script async>
  //初期マップの設定
  async function initMap(){
    let marker;
    let latitude = gon.post.latitude;
    let longitude = gon.post.longitude;
    let mapLatitude = latitude ? latitude : 35.681236;
    let mapLongitude = longitude ? longitude : 139.767125;

    const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary("marker");
    const { Map } = await google.maps.importLibrary("maps");

    let map = new Map(document.getElementById("map"),  {
      zoom: 12,
      center: { lat: mapLatitude, lng: mapLongitude },
      mapId: "<%= ENV['GOOGLE_MAP_ID'] %>", // Map ID is required for advanced markers.
    });

    if ( latitude !== null && longitude !== null){
      marker = new google.maps.marker.AdvancedMarkerView({
            map : map,
            position : { lat: latitude, lng: longitude },
      })
    }

    map.addListener('click', function(e) {
      getClickLatLng(e.latLng, map);
      let lat = e.latLng.lat();
      let lng = e.latLng.lng();

      document.getElementById("post_latitude").value = lat;
      document.getElementById("post_longitude").value = lng;
    });

    function getClickLatLng(lat_lng, map) {
      if (marker) {
        marker.position =  lat_lng ;
      } else {
        marker = new google.maps.marker.AdvancedMarkerView({
          position: lat_lng,
          map: map
        });
      }
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAP_API"]%>&v=beta&libraries=marker&callback=initMap" async defer></script>
