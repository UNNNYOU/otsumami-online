<div class="flex justify-center items-center min-h-screen">
  <div class="container flex">
    <div class="w-2/5 h-screen mr-10">
      <p class="mt-6 mb-4">
        <%= link_to 'javascript:history.back()', class: "text-xl" do%>
          <i class="fa-solid fa-angles-left"></i>戻る
        <%end%>
      </p>
      <div class="h-5/6 overflow-auto hidden-scrollbar" >
        <% @posts.each do |post| %>
          <%= link_to post_path(post), data: { turbo: false } do%>
            <div id="post-<%= post.id %>", class="card card-side h-[150px] bg-gohun shadow-xl mt-5 rounded-xl">
              <%if post.images.attached? %>
                <div class="w-[150px] h-[150px] ">
                  <%= image_tag url_for(post.images.first), class: "w-full h-full rounded-l-xl"%>
                </div>
              <%else%>
                <div class="w-[150px] h-[150px] ">
                  <%= image_tag "top-main.png", class: "w-full h-full rounded-l-xl"%>
                </div>
              <% end %>

              <div class="card-body p-4 w-2/3">
                <h2 class="card-title"><%= post.title%></h2>
                <p class="text-sm mt-3"><%= post.body.truncate(50) %></p>
              </div>
            </div>
          <%end%>
        <%end%>
      </div>
    </div>
    <div class="w-3/5">
      <div id='map'></div>
    </div>
  </div>
</div>

<style>
  #map {
    height: 100vh;
  }
</style>

<script>
  //初期マップの設定
  async function initMap(){

    const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary("marker");
    const { Map } = await google.maps.importLibrary("maps");

    //現在位置の取得
    navigator.geolocation.getCurrentPosition(function(position) {
      let latitude = position.coords.latitude;
      let longitude = position.coords.longitude;

      let map = new Map(document.getElementById("map"),  {
        zoom: 12,
        center: { lat: latitude, lng: longitude },
        mapId: "<%= ENV['GOOGLE_MAP_ID'] %>",
      });

      //現在位置のマーカー
      const pinViewContents = new google.maps.marker.PinView({
        background: "#005CAF",
        borderColor: "#005CAF",
        glyphColor: "white",
      });

      let locationMarker = new google.maps.marker.AdvancedMarkerView({
        map : map,
        position : { lat: latitude, lng: longitude },
        content: pinViewContents.element,
      });


      let lastElement = null;

      // 投稿のマーカー
      gon.posts.forEach(post =>{

        let postMarker = new google.maps.marker.AdvancedMarkerView({
          map : map,
          position : { lat: post.latitude, lng: post.longitude },
        })

        postMarker.addEventListener("click", function() {
          // 前回の要素の色を元に戻す
          if (lastElement) {
            lastElement.style.backgroundColor = '';  // 元の色に戻す
          }

          // 現在クリックした要素に色を付ける
          let element = document.getElementById('post-' + post.id);
          if (element) {
            element.style.backgroundColor = '#FAD689';  // 色を黄色に変更
            element.scrollIntoView({behavior: 'smooth'});  // フォーカス
            lastElement = element;  // 現在の要素を保存する
          }
        });
      });
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAP_API"]%>&v=beta&libraries=marker&callback=initMap" async defer></script>

